{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","error","alt","View","imageStyle","RandomChar","useState","setChar","loading","setLoading","setError","marvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","onError","Math","floor","random","then","catch","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","onCharListLoading","onCharListLoaded","itemsRefs","useRef","newCharList","ended","length","arr","item","i","imgStyle","ref","el","current","tabIndex","onCharSelected","forEach","classList","remove","add","focus","renderChars","disabled","propsType","PropTypes","func","isRequired","Skeleton","CharInfo","charId","onCharLoading","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20b2773.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#top\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#top\">Characters</a></li>\n                    /\n                    <li><a href=\"#top\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  _apiKey = 'apikey=f6bc8b1e66e4f7d319f089c8b5146efe';\n  _baseOffset = 210;\n\n  getResource = async (url) => {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  getAllCharacters = async (offset = this._baseOffset) => {\n    const res = await this.getResource(`${this._apiBase}/characters?limit=9&offset=${offset}&${this._apiKey}`);\n    return res.data.results.map(this._transformCharacter)\n  }\n\n  getCharacter = async (id) => {\n    const res = await this.getResource(`${this._apiBase}/characters/${id}?&${this._apiKey}`);\n    return this._transformCharacter(res.data.results[0]);\n  }\n\n  _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 180)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension, //превьюшка\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    }\n  }\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n                <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n                <g transform=\"rotate(45)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(50,80)\">\n                <g transform=\"rotate(90)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n                <g transform=\"rotate(135)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n                <g transform=\"rotate(180)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n                <g transform=\"rotate(225)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n                <g transform=\"rotate(270)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n                <g transform=\"rotate(315)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n                    </circle>\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n      <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={error} alt='error'/>\n  )\n}\n\nexport default ErrorMessage;","import { useEffect, useState } from \"react\";\n\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport './randomChar.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const marvelService = new MarvelService()\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000); // что бы было меньше запросов на сервер, потом запустишь\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n    setLoading(false);\n  }\n\n  const onCharLoading = () => {\n    setLoading(true);\n    setError(false);\n  }\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  }\n\n  function updateChar() {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    onCharLoading();\n    marvelService\n      .getCharacter(id)\n      .then(onCharLoaded)\n      .catch(onError)\n  }\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\">\n      {spinner}\n      {errorMessage}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!<br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">\n          Or choose another one\n        </p>\n        <button className=\"button button__main\" onClick={updateChar}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  )\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  const imageStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? { objectFit: 'contain' } : null;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img style={imageStyle} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">\n          {description}\n        </p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RandomChar;\n","import { useEffect, useRef, useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n    const marvelService = new MarvelService()\n\n    useEffect(() => {\n        onRequest();\n    }, [])\n\n    const onRequest = (offset) => {\n        onCharListLoading();\n        marvelService\n            .getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .catch(onError)\n    }\n\n    const itemsRefs = useRef([]);\n\n    const onCharListLoading = () => {\n        setNewItemLoading(true)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList([...charList, ...newCharList]);\n        setLoading(false);\n        setNewItemLoading(false);\n        setOffset(offset + 9);\n        setCharEnded(ended)\n    }\n\n\n\n    const onError = () => {\n        setLoading(false);\n        setError(true);\n    }\n\n    const onClickAddFocus = (id) => {\n        itemsRefs.current.forEach(item => {\n            item.classList.remove('char__item_selected');\n        })\n        itemsRefs.current[id].classList.add('char__item_selected');\n        itemsRefs.current[id].focus();\n    }\n\n    function renderChars(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    ref={el => itemsRefs.current[i] = el}\n                    tabIndex={0}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        onClickAddFocus(i);\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderChars(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n        <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propsType = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const marvelService = new MarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n    onCharLoading();\n    marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError)\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n    setLoading(false);\n  }\n\n  const onCharLoading = () => {\n    setLoading(true);\n    setError(false);\n  }\n\n  const onError = () => {\n    setLoading(false);\n    setError(true);\n  }\n\n\n  const skeleton = char || loading || error ? null : <Skeleton />\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  )\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  const imageStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? { objectFit: 'contain' } : null;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img style={imageStyle} src={thumbnail} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">\n        {description}\n      </div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'This character has no comics.'}\n        {\n          comics.slice(0, 10).map((item, i) => {\n            return (\n              <li key={i} className=\"char__comics-item\">\n                {item.name}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;\n","import {Component} from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false\n  }\n\n  // static getDerivedStateFromError(error) { // юзается для того что бы только менять state\n  //   return {error: true}\n  // }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true\n    })\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage/>\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nconst App = () => {\n  const [selectedChar, setChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setChar(id)\n  }\n\n  return (\n    <div className=\"app\">\n      <AppHeader />\n      <main>\n        <ErrorBoundary>\n          <RandomChar />\n        </ErrorBoundary>\n        <div className=\"char__content\">\n          <ErrorBoundary>\n            <CharList onCharSelected={onCharSelected} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary>\n        </div>\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}