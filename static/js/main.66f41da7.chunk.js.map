{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","error","alt","RandomChar","state","loading","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","timerId","setInterval","clearInterval","errorMessage","spinner","content","onClick","mjolnir","Component","View","imageStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemsRefs","setItemRef","elem","push","onClickAddFocus","forEach","item","classList","remove","add","focus","arr","i","imgStyle","ref","tabIndex","props","onCharSelected","renderChars","disabled","propsType","PropTypes","func","isRequired","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66f41da7.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#top\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#top\">Characters</a></li>\n                    /\n                    <li><a href=\"#top\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=f6bc8b1e66e4f7d319f089c8b5146efe';\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(`${this._apiBase}/characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n    return res.data.results.map(this._transformCharacter)\r\n  }\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(`${this._apiBase}/characters/${id}?&${this._apiKey}`);\r\n    return this._transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 180)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension, //превьюшка\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n      <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={error} alt='error'/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import {Component} from \"react\";\n\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport './randomChar.scss';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n  state = {\n    char: {},\n    loading: true,\n    error: false\n  }\n\n  MarvelService = new MarvelService()\n\n  componentDidMount() {\n    this.updateChar();\n    this.timerId = setInterval(this.updateChar, 60000) // что бы было меньше запросов на сервер, потом запустишь\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false,\n    })\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n      error: false\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.MarvelService\n        .getCharacter(id)\n        .then(this.onCharLoaded)\n        .catch(this.onError)\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n          {spinner}\n          {errorMessage}\n          {content}\n          <div className=\"randomchar__static\">\n            <p className=\"randomchar__title\">\n              Random character for today!<br/>\n              Do you want to get to know him better?\n            </p>\n            <p className=\"randomchar__title\">\n              Or choose another one\n            </p>\n            <button className=\"button button__main\" onClick={this.updateChar}>\n              <div className=\"inner\">try it</div>\n            </button>\n            <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n          </div>\n        </div>\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki} = char;\n  const imageStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {objectFit: 'contain'} : null;\n\n  return (\n      <div className=\"randomchar__block\">\n        <img style={imageStyle} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n        <div className=\"randomchar__info\">\n          <p className=\"randomchar__name\">{name}</p>\n          <p className=\"randomchar__descr\">\n            {description}\n          </p>\n          <div className=\"randomchar__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default RandomChar;","import {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport MarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    MarvelService = new MarvelService()\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.MarvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    itemsRefs = [];\n\n    setItemRef = elem => {\n        this.itemsRefs.push(elem);\n    }\n\n    onClickAddFocus = (id) => {\n        this.itemsRefs.forEach(item => {\n            item.classList.remove('char__item_selected');\n        })\n        this.itemsRefs[id].classList.add('char__item_selected');\n        this.itemsRefs[id].focus();\n    }\n\n    renderChars(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    ref={this.setItemRef}\n                    tabIndex={0}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.onClickAddFocus(i);\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    render() {\n        const { charList, error, loading, offset, newItemLoading, charEnded } = this.state;\n\n        const items = this.renderChars(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propsType = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false\n  }\n\n  MarvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n    if (!charId) {\n      return;\n    }\n    this.onCharLoading();\n    this.MarvelService\n        .getCharacter(charId)\n        .then(this.onCharLoaded)\n        .catch(this.onError)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false,\n    })\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n      error: false\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n\n  render() {\n    const {char, loading, error} = this.state;\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n          {skeleton}\n          {errorMessage}\n          {spinner}\n          {content}\n        </div>\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n  const imageStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {objectFit: 'contain'} : null;\n\n  return (\n      <>\n        <div className=\"char__basics\">\n          <img style={imageStyle} src={thumbnail} alt={name}/>\n          <div>\n            <div className=\"char__info-name\">{name}</div>\n            <div className=\"char__btns\">\n              <a href={homepage} className=\"button button__main\">\n                <div className=\"inner\">homepage</div>\n              </a>\n              <a href={wiki} className=\"button button__secondary\">\n                <div className=\"inner\">Wiki</div>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"char__descr\">\n          {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n          { comics.length > 0 ? null : 'This character has no comics.' }\n          {\n            comics.slice(0, 10).map((item, i) => {\n              return (\n                <li key={i} className=\"char__comics-item\">\n                  {item.name}\n                </li>\n            )\n          })\n          }\n        </ul>\n      </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  // static getDerivedStateFromError(error) { // юзается для того что бы только менять state\r\n  //   return {error: true}\r\n  // }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nclass App extends Component {\n  state = {\n    selectedChar: null\n  }\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id\n    })\n  }\n  \n  render() {\n    return (\n        <div className=\"app\">\n          <AppHeader/>\n          <main>\n            <ErrorBoundary>\n              <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n              <ErrorBoundary>\n                <CharList onCharSelected={this.onCharSelected}/>\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <CharInfo charId={this.state.selectedChar}/>\n              </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n          </main>\n        </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}